// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String     @id @default(uuid())
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  username            String     @unique @db.VarChar(50)
  first_name          String?    @db.VarChar(50)
  last_name           String?    @db.VarChar(50)
  avatar              String?    @db.VarChar(255)
  two_factor_auth     Boolean    @default(false)
  two_factor_auth_key String?    @db.VarChar(255)
  two_factor_auth_uri String?    @db.VarChar(255)
  friends             User[]     @relation("Friends")
  friendsRelations    User[]     @relation("Friends")
  roomMemberships     RoomUser[]
}

model RoomUser {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  isAdmin   Boolean   @default(false)
  isBanned  Boolean   @default(false)
  hasRead   Boolean   @default(false)
  room      Room      @relation(fields: [roomId], references: [id])
  roomId    String
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  messages  Message[]
}

model Room {
  id                 String     @id @default(uuid())
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  name               String?    @db.VarChar(255)
  image              String?    @db.VarChar(255)
  password           String?    @db.VarChar(255)
  isPasswordRequired Boolean    @default(false)
  isDm               Boolean    @default(false)
  members            RoomUser[]
  messages           Message[]
}

model Message {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  message    String
  room       Room     @relation(fields: [roomId], references: [id])
  roomId     String
  roomUser   RoomUser @relation(fields: [roomUserId], references: [id])
  roomUserId String
}
